version: '3.8'

services:
  db:
    image: postgres:15-alpine
    platform: ${PLATFORM:-linux/arm64}
    container_name: aegis-db
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aegis
    networks:
      - aegis-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: python:3.11-slim
    container_name: aegis-backend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
    command: sh -c "pip install -r requirements.txt && uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload"
    depends_on:
      - db
    env_file: .env
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PYTHONUNBUFFERED=1
      - DOCKER_API_VERSION=1.47
    networks:
      - aegis-net
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    image: node:20-slim
    container_name: aegis-ui
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    depends_on:
      - backend
    networks:
      - aegis-net
    ports:
      - "3001:3000"

networks:
  aegis-net:
    driver: bridge

volumes:
  db-data:
    name: aegis-db-data
