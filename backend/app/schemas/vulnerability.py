from pydantic import BaseModel
from typing import Dict, List, Optional, Any
from datetime import datetime

class VulnerabilityBase(BaseModel):
    """Базовая схема уязвимости"""
    id: str
    container_id: str
    cve_id: str
    package_name: str
    package_version: str
    fixed_version: Optional[str] = None
    cvss: float
    severity: str
    description: Optional[str] = None

class VulnerabilityCreate(VulnerabilityBase):
    """Схема создания уязвимости"""
    details: Dict[str, Any]

class VulnerabilityUpdate(BaseModel):
    """Схема обновления уязвимости"""
    cvss: Optional[float] = None
    severity: Optional[str] = None
    description: Optional[str] = None
    details: Optional[Dict[str, Any]] = None
    score: Optional[float] = None
    impact_factor: Optional[float] = None
    exploit_probability: Optional[float] = None

class VulnerabilityInDB(VulnerabilityBase):
    """Схема уязвимости в БД"""
    details: Dict[str, Any]
    score: float
    impact_factor: float
    exploit_probability: float
    created_at: datetime
    updated_at: datetime
    
    class Config:
        from_attributes = True

class VulnerabilityWithContainer(VulnerabilityInDB):
    """Схема уязвимости с данными контейнера"""
    container_name: str
    container_image: str 
